# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gGMSKPGKBJmsaKP9oD12DD0fjgLr-lH8

<img src="https://www.wikihow.com/images/thumb/b/be/Read-a-Measuring-Tape-Step-13-Version-4.jpg/v4-1200px-Read-a-Measuring-Tape-Step-13-Version-4.jpg" width="20%">
"""

import cv2
import numpy as np
import requests
from io import BytesIO
from google.colab.patches import cv2_imshow

def download_image(url):
    response = requests.get(url)
    image = np.array(bytearray(response.content), dtype=np.uint8)
    image = cv2.imdecode(image, cv2.IMREAD_COLOR)
    return image

def detect_tape(image):
    hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)
    lower_red1 = np.array([0, 120, 70])
    upper_red1 = np.array([10, 255, 255])
    lower_red2 = np.array([170, 120, 70])
    upper_red2 = np.array([180, 255, 255])
    mask1 = cv2.inRange(hsv, lower_red1, upper_red1)
    mask2 = cv2.inRange(hsv, lower_red2, upper_red2)
    mask = cv2.bitwise_or(mask1, mask2)
    contours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    if contours:
        # Find the largest contour and its minimum area rectangle
        contour = max(contours, key=cv2.contourArea)
        rect = cv2.minAreaRect(contour)
        box = cv2.boxPoints(rect)
        box = np.int0(box)
        return box
    else:
        return None

def main():
    url = "https://b7c7c8y7.stackpathcdn.com/wp-content/uploads/2019/06/Standard-Floor-marking-tape-red2.jpg"
    image = download_image(url)
    box = detect_tape(image)
    if box is not None:
        cv2.drawContours(image, [box], 0, (0, 255, 0), 2)
        cv2_imshow(image)
    else:
        print("No tape detected.")

main()

